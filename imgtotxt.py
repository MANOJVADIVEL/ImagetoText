from PIL import Image
from io import BytesIO
import streamlit as st
import requests
import base64

st.title("IMG to TXT")

API_URL = "https://api-inference.huggingface.co/models/Salesforce/blip-image-captioning-large"

headers = {"Authorization": "Bearer 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"}



def query(image_base64):
    json_data = {"inputs": {"image": image_base64}}
    response = requests.post(API_URL, headers=headers, json=json_data)
    return response.json()

def encode_image_to_base64(image_file):
    image = Image.open(image_file)
    buffered = BytesIO()
    image.save(buffered, format=image.format)
    img_base64 = base64.b64encode(buffered.getvalue()).decode('utf-8')
    return img_base64



def get_img_as_base64(image_path):
    with open(image_path, "rb") as image_file:
        return encode_image_to_base64(image_file)

img = get_img_as_base64("M:/Guvi/day2/kio.jpg")

page_bg_img = f"""
<style>
[data-testid="stAppViewContainer"] > .main {{
background-image: url("data:image/png;base64,{img}");
background-size: cover;
}}
[data-testid="stHeader"] {{
background: rgba(0,0,0,0);
}}
</style>
"""

st.markdown(page_bg_img, unsafe_allow_html=True)

uploaded_file = st.file_uploader("Browse your gallery", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    if st.button("Generate Caption"):
        
        img_base64 = encode_image_to_base64(uploaded_file)
        output = query(img_base64)
        
        if isinstance(output, list) and len(output) > 0:
            st.write("Caption generated by the AI:")
            st.write(output[0].get("generated_text", "No caption found"))
        else:
            st.write("Error:", "No caption found or unknown error")
